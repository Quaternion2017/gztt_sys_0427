{"ast":null,"code":"import apiManager from './apiManager';\nimport axios from 'axios';\nimport { message } from 'antd'; // let domain = \"http://159x64197e.iask.in\";\n\nvar domain = \"http://192.168.0.153:8082\";\nvar apis = apiManager.api; //设置请求允许携带cookie信息\n\naxios.defaults.withCredentials = true; // 拦截请求\n\naxios.interceptors.request.use(function (config) {\n  Toast.loading('加载中', 0);\n  return config;\n}); // 拦截相应\n\naxios.interceptors.response.use(function (config) {\n  Toast.hide();\n  return config;\n});\nvar apiRequest = {\n  all: function all(apiName, data, success, errorMsg) {\n    var api = apis[apiName];\n    return new Promise(function (reslove, reject) {\n      axios(api.method === \"GET\" ? domain + api.url + (data !== null ? data : '') : {\n        method: api.method,\n        url: domain + api.url,\n        data: data,\n        timeout: 10000\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code > 1) {\n          message.error(data.msg, 1);\n        } else if (success !== null) {\n          message.success(success, 1);\n        } else {\n          reslove(response.data);\n          return response.data;\n        }\n      }).catch(function (error) {\n        reject(error);\n        message.error(errorMsg, 1);\n      });\n    });\n  }\n};\nexport default apiRequest;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\3.公司项目\\4.光子头条\\gztt_sys\\src\\servers\\api\\apiRequest.js"],"names":["apiManager","axios","message","domain","apis","api","defaults","withCredentials","interceptors","request","use","config","Toast","loading","response","hide","apiRequest","all","apiName","data","success","errorMsg","Promise","reslove","reject","method","url","timeout","then","code","error","msg","catch"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB,C,CAEA;;AACA,IAAIC,MAAM,GAAG,2BAAb;AACA,IAAIC,IAAI,GAAGJ,UAAU,CAACK,GAAtB,C,CACA;;AACAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CACA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7CC,EAAAA,KAAK,CAACC,OAAN,CAAc,KAAd,EAAqB,CAArB;AACA,SAAOF,MAAP;AACH,CAHD,E,CAKA;;AACAV,KAAK,CAACO,YAAN,CAAmBM,QAAnB,CAA4BJ,GAA5B,CAAgC,UAAUC,MAAV,EAAkB;AAC9CC,EAAAA,KAAK,CAACG,IAAN;AACA,SAAOJ,MAAP;AACH,CAHD;AAIA,IAAMK,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,aAACC,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAsC;AACvC,QAAIhB,GAAG,GAAGD,IAAI,CAACc,OAAD,CAAd;AACA,WAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCvB,MAAAA,KAAK,CAACI,GAAG,CAACoB,MAAJ,KAAa,KAAb,GAAmBtB,MAAM,GAAGE,GAAG,CAACqB,GAAb,IAAkBP,IAAI,KAAG,IAAP,GAAYA,IAAZ,GAAiB,EAAnC,CAAnB,GAA0D;AAC5DM,QAAAA,MAAM,EAAEpB,GAAG,CAACoB,MADgD;AAE5DC,QAAAA,GAAG,EAAEvB,MAAM,GAAGE,GAAG,CAACqB,GAF0C;AAG5DP,QAAAA,IAAI,EAAEA,IAHsD;AAI5DQ,QAAAA,OAAO,EAAE;AAJmD,OAA3D,CAAL,CAKGC,IALH,CAKQ,UAACd,QAAD,EAAc;AAClB,YAAIK,IAAI,GAAGL,QAAQ,CAACK,IAApB;;AACA,YAAIA,IAAI,CAACU,IAAL,GAAY,CAAhB,EAAmB;AACf3B,UAAAA,OAAO,CAAC4B,KAAR,CAAcX,IAAI,CAACY,GAAnB,EAAwB,CAAxB;AACH,SAFD,MAEO,IAAIX,OAAO,KAAK,IAAhB,EAAsB;AACzBlB,UAAAA,OAAO,CAACkB,OAAR,CAAgBA,OAAhB,EAAyB,CAAzB;AACH,SAFM,MAEA;AACHG,UAAAA,OAAO,CAACT,QAAQ,CAACK,IAAV,CAAP;AACA,iBAAOL,QAAQ,CAACK,IAAhB;AACH;AACJ,OAfD,EAeGa,KAfH,CAeS,UAACF,KAAD,EAAW;AAChBN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcT,QAAd,EAAwB,CAAxB;AACH,OAlBD;AAmBH,KApBM,CAAP;AAqBH;AAxBc,CAAnB;AA0BA,eAAeL,UAAf","sourcesContent":["import apiManager from './apiManager';\r\nimport axios from 'axios';\r\nimport { message } from 'antd'\r\n\r\n// let domain = \"http://159x64197e.iask.in\";\r\nlet domain = \"http://192.168.0.153:8082\";\r\nlet apis = apiManager.api;\r\n//设置请求允许携带cookie信息\r\naxios.defaults.withCredentials = true;\r\n// 拦截请求\r\naxios.interceptors.request.use(function (config) {\r\n    Toast.loading('加载中', 0);\r\n    return config\r\n});\r\n\r\n// 拦截相应\r\naxios.interceptors.response.use(function (config) {\r\n    Toast.hide();\r\n    return config\r\n});\r\nconst apiRequest = {\r\n    all: (apiName, data, success, errorMsg) => {\r\n        let api = apis[apiName];\r\n        return new Promise((reslove, reject) => {\r\n            axios(api.method===\"GET\"?domain + api.url+(data!==null?data:''):{\r\n                method: api.method,\r\n                url: domain + api.url,\r\n                data: data,\r\n                timeout: 10000\r\n            }).then((response) => {\r\n                let data = response.data;\r\n                if (data.code > 1) {\r\n                    message.error(data.msg, 1);\r\n                } else if (success !== null) {\r\n                    message.success(success, 1);\r\n                } else {\r\n                    reslove(response.data);\r\n                    return response.data;\r\n                }\r\n            }).catch((error) => {\r\n                reject(error);\r\n                message.error(errorMsg, 1);\r\n            });\r\n        })\r\n    }\r\n}\r\nexport default apiRequest;"]},"metadata":{},"sourceType":"module"}