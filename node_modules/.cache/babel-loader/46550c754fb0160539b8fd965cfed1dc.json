{"ast":null,"code":"import apiManager from './apiManager';\nimport axios from 'axios';\nimport { message } from 'antd'; // let domain = \"http://159x64197e.iask.in\";\n\nvar domain = \"http://localhost:8082\";\nvar apis = apiManager.api; //设置请求允许携带cookie信息\n\naxios.defaults.withCredentials = true; // 拦截请求\n\naxios.interceptors.request.use(function (config) {\n  return config;\n}); // 拦截相应\n\naxios.interceptors.response.use(function (config) {\n  return config;\n});\nvar apiRequest = {\n  all: function all(apiName, data, success, errorMsg) {\n    var api = apis[apiName];\n    return new Promise(function (reslove, reject) {\n      var bol = api.url.length === api.url.lastIndexOf(\"/\") + 1;\n      axios({\n        method: api.method,\n        url: domain + (bol ? api.url + (data !== null ? data : '') : api.url),\n        data: bol ? \"\" : data,\n        timeout: 10000\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.code > 1) {\n          message.error(data.msg, 1);\n        } else if (success !== null) {\n          message.success(success, 1);\n        }\n\n        reslove(response.data);\n      }).catch(function (error) {\n        reject(error);\n        message.error(errorMsg, 1);\n      });\n    });\n  }\n};\nexport default apiRequest;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\3.公司项目\\4.光子头条\\gztt_sys\\src\\servers\\api\\apiRequest.js"],"names":["apiManager","axios","message","domain","apis","api","defaults","withCredentials","interceptors","request","use","config","response","apiRequest","all","apiName","data","success","errorMsg","Promise","reslove","reject","bol","url","length","lastIndexOf","method","timeout","then","code","error","msg","catch"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB,C,CAEA;;AACA,IAAIC,MAAM,GAAG,uBAAb;AACA,IAAIC,IAAI,GAAGJ,UAAU,CAACK,GAAtB,C,CACA;;AACAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CACA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C,SAAOA,MAAP;AACH,CAFD,E,CAIA;;AACAV,KAAK,CAACO,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAgC,UAAUC,MAAV,EAAkB;AAE9C,SAAOA,MAAP;AACH,CAHD;AAIA,IAAME,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,aAACC,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAsC;AACvC,QAAIb,GAAG,GAAGD,IAAI,CAACW,OAAD,CAAd;AACA,WAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAMC,GAAG,GAAIjB,GAAG,CAACkB,GAAJ,CAAQC,MAAR,KAAiBnB,GAAG,CAACkB,GAAJ,CAAQE,WAAR,CAAoB,GAApB,IAAyB,CAAvD;AACAxB,MAAAA,KAAK,CAAC;AACFyB,QAAAA,MAAM,EAAErB,GAAG,CAACqB,MADV;AAEFH,QAAAA,GAAG,EAAGpB,MAAM,IAAGmB,GAAG,GAAEjB,GAAG,CAACkB,GAAJ,IAASP,IAAI,KAAG,IAAP,GAAYA,IAAZ,GAAiB,EAA1B,CAAF,GAAgCX,GAAG,CAACkB,GAA1C,CAFV;AAGFP,QAAAA,IAAI,EAAGM,GAAG,GAAC,EAAD,GAAIN,IAHZ;AAIFW,QAAAA,OAAO,EAAE;AAJP,OAAD,CAAL,CAKGC,IALH,CAKQ,UAAChB,QAAD,EAAc;AAClB,YAAII,IAAI,GAAGJ,QAAQ,CAACI,IAApB;;AACA,YAAIA,IAAI,CAACa,IAAL,GAAY,CAAhB,EAAmB;AACf3B,UAAAA,OAAO,CAAC4B,KAAR,CAAcd,IAAI,CAACe,GAAnB,EAAwB,CAAxB;AACH,SAFD,MAEO,IAAId,OAAO,KAAK,IAAhB,EAAsB;AACzBf,UAAAA,OAAO,CAACe,OAAR,CAAgBA,OAAhB,EAAyB,CAAzB;AACH;;AACDG,QAAAA,OAAO,CAACR,QAAQ,CAACI,IAAV,CAAP;AACH,OAbD,EAaGgB,KAbH,CAaS,UAACF,KAAD,EAAW;AAChBT,QAAAA,MAAM,CAACS,KAAD,CAAN;AACA5B,QAAAA,OAAO,CAAC4B,KAAR,CAAcZ,QAAd,EAAwB,CAAxB;AACH,OAhBD;AAiBH,KAnBM,CAAP;AAoBH;AAvBc,CAAnB;AAyBA,eAAeL,UAAf","sourcesContent":["import apiManager from './apiManager';\r\nimport axios from 'axios';\r\nimport { message } from 'antd'\r\n\r\n// let domain = \"http://159x64197e.iask.in\";\r\nlet domain = \"http://localhost:8082\";\r\nlet apis = apiManager.api;\r\n//设置请求允许携带cookie信息\r\naxios.defaults.withCredentials = true;\r\n// 拦截请求\r\naxios.interceptors.request.use(function (config) {\r\n    return config\r\n});\r\n\r\n// 拦截相应\r\naxios.interceptors.response.use(function (config) {\r\n   \r\n    return config\r\n});\r\nconst apiRequest = {\r\n    all: (apiName, data, success, errorMsg) => {\r\n        let api = apis[apiName];\r\n        return new Promise((reslove, reject) => {\r\n            const bol = (api.url.length===api.url.lastIndexOf(\"/\")+1);\r\n            axios({\r\n                method: api.method,\r\n                url: (domain +(bol? api.url+(data!==null?data:''):api.url)),\r\n                data: (bol?\"\":data),\r\n                timeout: 10000\r\n            }).then((response) => {\r\n                let data = response.data;\r\n                if (data.code > 1) {\r\n                    message.error(data.msg, 1);\r\n                } else if (success !== null) {\r\n                    message.success(success, 1);\r\n                } \r\n                reslove(response.data);\r\n            }).catch((error) => {\r\n                reject(error);\r\n                message.error(errorMsg, 1);\r\n            });\r\n        })\r\n    }\r\n}\r\nexport default apiRequest;"]},"metadata":{},"sourceType":"module"}